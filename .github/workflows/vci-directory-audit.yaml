name: Nightly audit

on:
  schedule:
    - cron: '30 4 * * *'
  workflow_dispatch:
  push:
    tags:
      - audit*

jobs:
  vci-directory-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: npm setup
        run: |
          cd scripts/vci-directory-auditor
          npm install
          npm run build --if-present

      - name: run audit scripts
        run: |
          cd scripts/vci-directory-auditor
          npm run audit -- -o ../../logs/new_log.json -p ../../logs/daily_log.json -s ../../logs/daily_log_snapshot.json -a ../../logs/daily_audit.json -d ../../vci-issuers.json
          mv ../../logs/new_log.json ../../logs/daily_log.json
          npm run assemble -- -s ../../logs/vci_snapshot.json -c ../../logs/daily_log_snapshot.json

      - name: sign snapshot
        env:
          PRIVATE_SIG_KEY_PWD: ${{ secrets.PRIVATE_SIG_KEY_PWD }}
          PRIVATE_SIG_KEY: ${{ secrets.PRIVATE_SIG_KEY }}
        run: |
          echo "$PRIVATE_SIG_KEY" > private.pem
          openssl dgst -sha512 -sign private.pem -out logs/vci_snapshot.sig -passin env:PRIVATE_SIG_KEY_PWD logs/vci_snapshot.json
          rm private.pem

      - name: Upload snapshot artifacts
        uses: actions/upload-artifact@v4
        with:
          name: audit-log-files
          path: logs/*

  create-pr-job:
    needs: vci-directory-audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.tcpdevopsrobot }}

      - name: Download snapshot artifacts
        uses: actions/download-artifact@v4
        with:
          name: audit-log-files
          path: logs/

      - name: Commit and Push to Main
        env:
          GH_TOKEN: ${{ secrets.tcpdevopsrobot }}
        run: |
          # Check if there are changes
          if [[ -z `git status --porcelain` ]]; then
            echo "No changes detected, skipping commit"
            exit 0
          fi

          # Configure git
          git config user.name "VCI Directory Audit Bot"
          git config user.email "noreply@thecommonsproject.org"

          # Commit changes directly to main
          git add -f logs/daily_log.json
          git add -f logs/daily_log_snapshot.json
          git add -f logs/daily_audit.json
          git add -f logs/vci_snapshot.json
          git add -f logs/vci_snapshot.sig
          git commit -m "Daily VCI directory audit snapshot

          Automated snapshot update from nightly audit.

          - Updated vci_snapshot.json with latest issuer keys
          - Generated at: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          - Audit log: logs/daily_audit.json"

          # Add audit index entry
          COMMIT=$(git rev-parse HEAD)
          DATETIME=$(git log -n 1 --no-decorate --date=iso-strict -- logs/daily_log.json | head -3 | grep Date | cut -c 9-)
          echo "$COMMIT, $DATETIME" >> logs/audit-index.csv
          git add -f logs/audit-index.csv
          git commit -m "Update audit index with latest snapshot commit"

          # Push directly to main (bypasses branch protection)
          git push origin main

          echo "âœ… Successfully pushed audit snapshot to main"

          # Log summary for audit trail
          ISSUER_COUNT=$(jq '.issuerCount' logs/daily_audit.json)
          ERROR_COUNT=$(jq '.issuersWithErrors | length' logs/daily_audit.json)
          echo "ðŸ“Š Audit Summary:"
          echo "   Total Issuers: $ISSUER_COUNT"
          echo "   Issuers with Errors: $ERROR_COUNT"
